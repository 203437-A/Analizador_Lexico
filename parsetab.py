
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CICLO_FOR COMILLA CONDICIONAL_IF DECLARATIVO_BOOLEAN DECLARATIVO_INT DECLARATIVO_STRING DIGITO DOS_PUNTOS FUNCION_DEF IN MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE PARENTESIS_FINAL PARENTESIS_INICIAL PRINT PUNTO_Y_COMA RANGE VARIABLE\n    declaraciones : declaracion declaraciones\n                  | declaracion\n    \n    declaracion : DECLARATIVO_INT VARIABLE PUNTO_Y_COMA\n                | DECLARATIVO_STRING VARIABLE PUNTO_Y_COMA\n                | DECLARATIVO_BOOLEAN VARIABLE PUNTO_Y_COMA\n    \n    declaracion : CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n\n    \n    declaracion : CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion :  VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    '
    
_lr_action_items = {'DECLARATIVO_INT':([0,2,20,22,23,31,66,114,116,118,120,123,141,163,164,165,166,167,],[3,3,-3,-4,-5,-16,-18,-6,-7,-8,-9,-14,-17,-10,-11,-12,-13,-15,]),'DECLARATIVO_STRING':([0,2,20,22,23,31,66,114,116,118,120,123,141,163,164,165,166,167,],[5,5,-3,-4,-5,-16,-18,-6,-7,-8,-9,-14,-17,-10,-11,-12,-13,-15,]),'DECLARATIVO_BOOLEAN':([0,2,20,22,23,31,66,114,116,118,120,123,141,163,164,165,166,167,],[6,6,-3,-4,-5,-16,-18,-6,-7,-8,-9,-14,-17,-10,-11,-12,-13,-15,]),'CONDICIONAL_IF':([0,2,20,22,23,31,66,114,116,118,120,123,141,163,164,165,166,167,],[7,7,-3,-4,-5,-16,-18,-6,-7,-8,-9,-14,-17,-10,-11,-12,-13,-15,]),'FUNCION_DEF':([0,2,20,22,23,31,66,114,116,118,120,123,141,163,164,165,166,167,],[10,10,-3,-4,-5,-16,-18,-6,-7,-8,-9,-14,-17,-10,-11,-12,-13,-15,]),'VARIABLE':([0,2,3,5,6,9,10,20,22,23,28,31,47,49,51,53,57,66,70,72,74,76,79,111,114,116,118,120,123,141,143,144,145,146,147,163,164,165,166,167,],[4,4,12,14,15,18,19,-3,-4,-5,36,-16,59,61,63,65,69,-18,81,83,85,87,90,122,-6,-7,-8,-9,-14,-17,148,149,150,151,152,-10,-11,-12,-13,-15,]),'CICLO_FOR':([0,2,20,22,23,31,39,40,41,42,45,66,114,116,118,120,123,141,163,164,165,166,167,],[9,9,-3,-4,-5,-16,47,49,51,53,57,-18,-6,-7,-8,-9,-14,-17,-10,-11,-12,-13,-15,]),'PRINT':([0,2,20,22,23,31,39,40,41,42,45,66,78,114,116,118,120,123,125,126,127,128,130,141,163,164,165,166,167,],[8,8,-3,-4,-5,-16,46,48,50,52,56,-18,89,-6,-7,-8,-9,-14,131,132,133,134,136,-17,-10,-11,-12,-13,-15,]),'$end':([1,2,11,20,22,23,31,66,114,116,118,120,123,141,163,164,165,166,167,],[0,-2,-1,-3,-4,-5,-16,-18,-6,-7,-8,-9,-14,-17,-10,-11,-12,-13,-15,]),'PARENTESIS_INICIAL':([4,8,19,37,46,48,50,52,56,82,84,86,88,89,91,131,132,133,134,136,],[13,17,30,44,58,60,62,64,68,93,95,97,99,100,102,137,138,139,140,142,]),'DIGITO':([7,24,25,26,27,44,93,95,97,99,102,],[16,32,33,34,35,55,104,106,108,110,113,]),'PUNTO_Y_COMA':([12,14,15,21,54,103,105,107,109,112,135,158,159,160,161,162,],[20,22,23,31,66,114,116,118,120,123,141,163,164,165,166,167,]),'PARENTESIS_FINAL':([13,30,43,55,92,94,96,98,101,104,106,108,110,113,129,153,154,155,156,157,],[21,38,54,67,103,105,107,109,112,115,117,119,121,124,135,158,159,160,161,162,]),'MAYOR_QUE':([16,],[24,]),'MENOR_QUE':([16,],[25,]),'MENOR_IGUAL':([16,],[26,]),'MAYOR_IGUAL':([16,],[27,]),'COMILLA':([17,36,58,60,62,64,68,81,83,85,87,90,100,122,137,138,139,140,142,148,149,150,151,152,],[28,43,70,72,74,76,79,92,94,96,98,101,111,129,143,144,145,146,147,153,154,155,156,157,]),'IN':([18,59,61,63,65,69,],[29,71,73,75,77,80,]),'RANGE':([29,71,73,75,77,80,],[37,82,84,86,88,91,]),'DOS_PUNTOS':([32,33,34,35,38,67,115,117,119,121,124,],[39,40,41,42,45,78,125,126,127,128,130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaraciones':([0,2,],[1,11,]),'declaracion':([0,2,],[2,2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaraciones","S'",1,None,None,None),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','analizador_sintactico.py',7),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','analizador_sintactico.py',8),
  ('declaracion -> DECLARATIVO_INT VARIABLE PUNTO_Y_COMA','declaracion',3,'p_declaracion','analizador_sintactico.py',17),
  ('declaracion -> DECLARATIVO_STRING VARIABLE PUNTO_Y_COMA','declaracion',3,'p_declaracion','analizador_sintactico.py',18),
  ('declaracion -> DECLARATIVO_BOOLEAN VARIABLE PUNTO_Y_COMA','declaracion',3,'p_declaracion','analizador_sintactico.py',19),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',25),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',26),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',27),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',28),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',35),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',36),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',37),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',38),
  ('declaracion -> FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_definicion_funcion','analizador_sintactico.py',44),
  ('declaracion -> FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_definicion_funcion_con_for','analizador_sintactico.py',50),
  ('declaracion -> VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',4,'p_llamada_funcion','analizador_sintactico.py',56),
  ('declaracion -> CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',15,'p_bucle','analizador_sintactico.py',62),
  ('declaracion -> PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',7,'p_print','analizador_sintactico.py',68),
]
