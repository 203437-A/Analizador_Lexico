
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOLEAN_FALSE BOOLEAN_TRUE CICLO_FOR COMILLA CONDICIONAL_IF DIGITO DOS_PUNTOS FUNCION_DEF IGUAL IN MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE PARENTESIS_FINAL PARENTESIS_INICIAL PRINT PUNTO_Y_COMA RANGE VARIABLE\n    declaraciones : declaracion declaraciones\n                  | declaracion\n    \n    declaracion : VARIABLE IGUAL DIGITO PUNTO_Y_COMA\n                | VARIABLE IGUAL COMILLA VARIABLE COMILLA PUNTO_Y_COMA\n                | VARIABLE IGUAL BOOLEAN_TRUE PUNTO_Y_COMA\n                | VARIABLE IGUAL BOOLEAN_FALSE PUNTO_Y_COMA\n    \n    declaracion : CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n\n    \n    declaracion : CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n                | CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion :  VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA\n    \n    declaracion : PRINT PARENTESIS_INICIAL  VARIABLE  PARENTESIS_FINAL PUNTO_Y_COMA\n    '
    
_lr_action_items = {'VARIABLE':([0,2,6,7,12,16,24,28,30,31,32,47,50,52,54,56,58,62,71,75,77,79,81,84,116,119,121,123,125,128,146,148,149,150,151,152,168,169,170,171,172,],[3,3,13,14,25,29,37,-3,-5,-6,-17,-20,-4,64,66,68,70,74,-19,86,88,90,92,95,127,-7,-8,-9,-10,-15,-18,153,154,155,156,157,-11,-12,-13,-14,-16,]),'CONDICIONAL_IF':([0,2,28,30,31,32,47,50,71,119,121,123,125,128,146,168,169,170,171,172,],[4,4,-3,-5,-6,-17,-20,-4,-19,-7,-8,-9,-10,-15,-18,-11,-12,-13,-14,-16,]),'FUNCION_DEF':([0,2,28,30,31,32,47,50,71,119,121,123,125,128,146,168,169,170,171,172,],[7,7,-3,-5,-6,-17,-20,-4,-19,-7,-8,-9,-10,-15,-18,-11,-12,-13,-14,-16,]),'CICLO_FOR':([0,2,28,30,31,32,42,43,44,45,47,49,50,71,119,121,123,125,128,146,168,169,170,171,172,],[6,6,-3,-5,-6,-17,52,54,56,58,-20,62,-4,-19,-7,-8,-9,-10,-15,-18,-11,-12,-13,-14,-16,]),'PRINT':([0,2,28,30,31,32,42,43,44,45,47,49,50,71,83,119,121,123,125,128,130,131,132,133,135,146,168,169,170,171,172,],[5,5,-3,-5,-6,-17,51,53,55,57,-20,61,-4,-19,94,-7,-8,-9,-10,-15,136,137,138,139,141,-18,-11,-12,-13,-14,-16,]),'$end':([1,2,8,28,30,31,32,47,50,71,119,121,123,125,128,146,168,169,170,171,172,],[0,-2,-1,-3,-5,-6,-17,-20,-4,-19,-7,-8,-9,-10,-15,-18,-11,-12,-13,-14,-16,]),'IGUAL':([3,],[9,]),'PARENTESIS_INICIAL':([3,5,14,39,51,53,55,57,61,87,89,91,93,94,96,136,137,138,139,141,],[10,12,27,48,63,65,67,69,73,98,100,102,104,105,107,142,143,144,145,147,]),'DIGITO':([4,9,20,21,22,23,48,98,100,102,104,107,],[11,15,33,34,35,36,60,109,111,113,115,118,]),'COMILLA':([9,12,29,37,63,65,67,69,73,86,88,90,92,95,105,127,142,143,144,145,147,153,154,155,156,157,],[16,24,41,46,75,77,79,81,84,97,99,101,103,106,116,134,148,149,150,151,152,158,159,160,161,162,]),'BOOLEAN_TRUE':([9,],[17,]),'BOOLEAN_FALSE':([9,],[18,]),'PARENTESIS_FINAL':([10,25,27,46,60,97,99,101,103,106,109,111,113,115,118,134,158,159,160,161,162,],[19,38,40,59,72,108,110,112,114,117,120,122,124,126,129,140,163,164,165,166,167,]),'MAYOR_QUE':([11,],[20,]),'MENOR_QUE':([11,],[21,]),'MENOR_IGUAL':([11,],[22,]),'MAYOR_IGUAL':([11,],[23,]),'IN':([13,64,66,68,70,74,],[26,76,78,80,82,85,]),'PUNTO_Y_COMA':([15,17,18,19,38,41,59,108,110,112,114,117,140,163,164,165,166,167,],[28,30,31,32,47,50,71,119,121,123,125,128,146,168,169,170,171,172,]),'RANGE':([26,76,78,80,82,85,],[39,87,89,91,93,96,]),'DOS_PUNTOS':([33,34,35,36,40,72,120,122,124,126,129,],[42,43,44,45,49,83,130,131,132,133,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaraciones':([0,2,],[1,8,]),'declaracion':([0,2,],[2,2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaraciones","S'",1,None,None,None),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','analizador_sintactico.py',7),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','analizador_sintactico.py',8),
  ('declaracion -> VARIABLE IGUAL DIGITO PUNTO_Y_COMA','declaracion',4,'p_declaracion','analizador_sintactico.py',17),
  ('declaracion -> VARIABLE IGUAL COMILLA VARIABLE COMILLA PUNTO_Y_COMA','declaracion',6,'p_declaracion','analizador_sintactico.py',18),
  ('declaracion -> VARIABLE IGUAL BOOLEAN_TRUE PUNTO_Y_COMA','declaracion',4,'p_declaracion','analizador_sintactico.py',19),
  ('declaracion -> VARIABLE IGUAL BOOLEAN_FALSE PUNTO_Y_COMA','declaracion',4,'p_declaracion','analizador_sintactico.py',20),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',26),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',27),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',28),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_expresion_condicional','analizador_sintactico.py',29),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',36),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_QUE DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',37),
  ('declaracion -> CONDICIONAL_IF DIGITO MENOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',38),
  ('declaracion -> CONDICIONAL_IF DIGITO MAYOR_IGUAL DIGITO DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_expresion_condicional_con_for','analizador_sintactico.py',39),
  ('declaracion -> FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',12,'p_definicion_funcion','analizador_sintactico.py',45),
  ('declaracion -> FUNCION_DEF VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL DOS_PUNTOS CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',20,'p_definicion_funcion_con_for','analizador_sintactico.py',51),
  ('declaracion -> VARIABLE PARENTESIS_INICIAL PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',4,'p_llamada_funcion','analizador_sintactico.py',57),
  ('declaracion -> CICLO_FOR VARIABLE IN RANGE PARENTESIS_INICIAL DIGITO PARENTESIS_FINAL DOS_PUNTOS PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',15,'p_bucle','analizador_sintactico.py',63),
  ('declaracion -> PRINT PARENTESIS_INICIAL COMILLA VARIABLE COMILLA PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',7,'p_print','analizador_sintactico.py',69),
  ('declaracion -> PRINT PARENTESIS_INICIAL VARIABLE PARENTESIS_FINAL PUNTO_Y_COMA','declaracion',5,'p_print_variable','analizador_sintactico.py',75),
]
